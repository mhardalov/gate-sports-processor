Phase: Location
Input: Result Token NEAnnotaions NELocation EntityAnnotation WinnerRelation FinalScore
Options: control = appelt

Rule: AnnotateFoundResults
Priority:20
(
	({NEAnnotaions}):first
	({Token.string !=~ "[!.?]"})*
	(({NEAnnotaions})[0,1]):second
	({Token.string !=~ "[!.?]"})*
	({FinalScore}):result	
):match
-->
:match.FoundResult = {rule= "AnnotateFoundResults", kind="complex" }

Rule: SampleResultFound
Priority:50
(
	({NEAnnotaions}):first
	({Token.subkind == dashpunct})*
	({NEAnnotaions}):second
	({Token.subkind == dashpunct})*
	({FinalScore}):result	 
):match
-->
{
	gate.AnnotationSet match = (gate.AnnotationSet)bindings.get("match");

	gate.AnnotationSet first = (gate.AnnotationSet)bindings.get("first");
	gate.Annotation firstAnn = (gate.Annotation)first.iterator().next(); 

	gate.AnnotationSet second = (gate.AnnotationSet)bindings.get("second");
	gate.Annotation secondAnn = (gate.Annotation)second.iterator().next(); 

	gate.AnnotationSet result = (gate.AnnotationSet)bindings.get("result");
	gate.Annotation resultAnn = (gate.Annotation)result.iterator().next(); 

	gate.FeatureMap features = Factory.newFeatureMap();

	String firstCompetitor = doc.getContent().toString().substring(
		firstAnn.getStartNode().getOffset().intValue(),
		firstAnn.getEndNode().getOffset().intValue());

	String secondCompetitor = doc.getContent().toString().substring(
		secondAnn.getStartNode().getOffset().intValue(),
		secondAnn.getEndNode().getOffset().intValue());

	String resultStr = doc.getContent().toString().substring(
		resultAnn.getStartNode().getOffset().intValue(),
		resultAnn.getEndNode().getOffset().intValue());

	features.put("first_competitor", firstCompetitor);
	features.put("second_competitor", secondCompetitor);
	features.put("result", resultStr);
	features.put("kind", "sample");
	features.put("rule", "SampleResultFound");

	outputAS.add(match.firstNode(), match.lastNode(), "FoundResult", features);
}
